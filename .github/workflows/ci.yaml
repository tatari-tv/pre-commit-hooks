---
name: ci

on:  # yamllint disable-line rule:truthy
  push:
    branches:
      - '**'

permissions:
  contents: read
  id-token: write

env:
  POETRY_VERSION: "1.5.1"
  PYTHON_VERSION: "3.9"

jobs:
  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python ${{env.PYTHON_VERSION}}
        uses: actions/setup-python@v4
        with:
          python-version: ${{env.PYTHON_VERSION}}
      - name: Install Poetry
        shell: bash
        run: |
          pip3 install poetry==${{env.POETRY_VERSION}}
          poetry config virtualenvs.create false
      - name: Install Poetry Dependencies
        env:
          PYTHONUSERBASE: ""
          SETUPTOOLS_USE_DISTUTILS: "stdlib"
        shell: bash
        run: poetry install
      - run: make unit-test

  lint:
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python ${{env.PYTHON_VERSION}}
        uses: actions/setup-python@v4
        with:
          python-version: ${{env.PYTHON_VERSION}}
      - name: Install Poetry
        shell: bash
        run: |
          pip3 install poetry==${{env.POETRY_VERSION}}
          poetry config virtualenvs.create false
      - name: Install Poetry Dependencies
        env:
          PYTHONUSERBASE: ""
          SETUPTOOLS_USE_DISTUTILS: "stdlib"
        shell: bash
        run: poetry install
      - name: cache pre-commit
        uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit/
          key: pre-commit-${{runner.os}}-${{env.PYTHON_VERSION}}-${{hashFiles('.pre-commit-config.yaml')}}
      - run: make lint

  type-check:
    name: Type Checks
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python ${{env.PYTHON_VERSION}}
        uses: actions/setup-python@v4
        with:
          python-version: ${{env.PYTHON_VERSION}}
      - name: Install Poetry
        shell: bash
        run: |
          pip3 install poetry==${{env.POETRY_VERSION}}
          poetry config virtualenvs.create false
      - name: Install Poetry Dependencies
        env:
          PYTHONUSERBASE: ""
          SETUPTOOLS_USE_DISTUTILS: "stdlib"
        shell: bash
        run: poetry install
      - run: make type-check

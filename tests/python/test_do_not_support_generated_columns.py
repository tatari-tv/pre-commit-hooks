import tempfile

import pytest

from python_hooks.do_not_support_generated_columns import check_file
from python_hooks.do_not_support_generated_columns import filter_files


@pytest.mark.parametrize(
    "file_content, expected",
    [
        (  # true negative
            """
CREATE TABLE IF NOT EXISTS some.table
(
id  INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
);
            """,
            0,
        ),
        (
            # true positive
            """ALTER TABLE some_table RENAME some_id TO some_other_id;
            ALTER TABLE some_table ADD COLUMN some_id INT GENERATED ALWAYS AS (some_other_id) STORED;
            """,
            1,
        ),
        (
            # true positive case insensitive
            "alter table some_table add column some_id int generated always as (some_other_id) stored;",
            1,
        ),
        (
            # true positive complex generation expression:
            "alter table some_table add column some_id int generated always as (some_other_id / 2.5) stored;",
            1,
        ),
        (
            # true positive weird spacing in expression:
            "alter table some_table add column some_id int generated always as (  some_other_id / 2.5    ) stored;",
            1,
        ),
        (
            # true positive weird spacing:
            "alter table some_table add column some_id int generated   always as   (  some_other_id / 2.5    )stored;",
            1,
        ),
    ],
)
def test_check_file_caught(file_content, expected):
    with tempfile.TemporaryDirectory() as temp_dir:
        file_path = f"{temp_dir}/test_file.sql"
        # assert true negative
        with open(file_path, "w") as file:
            file.write(file_content)

        assert check_file(file_path) == expected


def test_filter_files():
    file_names = [
        "/some_dir/20211225_0101create_table.sql",
        "schema/migrations/20240426_1123create_table.sql",
        "schema/migrations/20240426_1123create_table.sql",
        "schema/migrations/20240427_1117create_table.sql",
        "schema/migrations/20240425_0101create_table.sql",
        "schema/migrations/20221225_0101create_table.sql",
        "schema/migrations/202412290101create_table.sql",
        "schema/migrations/202212290101create_table.sql",
    ]
    expected_files = [
        "schema/migrations/20240426_1123create_table.sql",
        "schema/migrations/20240426_1123create_table.sql",
        "schema/migrations/20240427_1117create_table.sql",
        "schema/migrations/202412290101create_table.sql",
    ]
    filtered_files = filter_files(file_names)
    assert filtered_files == expected_files

otto:
  api: 1
  jobs: 4
  tasks:
  - dev

tasks:
  # Main comprehensive task that runs all checks
  all:
    help: "Run all development tasks: dev, unit-test, type-check, lint"
    before: [dev, unit-test, type-check, lint]

  # Development setup
  dev:
    help: "Install development dependencies using Poetry"
    action: |
      #!/bin/bash
      poetry install

  # Testing tasks
  unit-test:
    help: "Run unit tests with pytest"
    before: [dev]
    action: |
      #!/bin/bash
      poetry run pytest tests/python

  # Code quality tasks
  type-check:
    help: "Run type checking with mypy"
    before: [dev]
    action: |
      #!/bin/bash
      poetry run mypy

  lint:
    help: "Run linting with pre-commit hooks"
    before: [dev]
    action: |
      #!/bin/bash
      poetry run pre-commit run --all-files

  # Cleanup task
  clean:
    help: "Clean build artifacts and caches"
    action: |
      #!/bin/bash
      rm -rf build/ dist/ .venv/ .mypy_cache/ .pytest_cache/
      rm -rf *.egg-info
      rm -rf .coverage .coverage.*
      find . -name '__pycache__' -type d -exec rm -rf {} + 2>/dev/null || true
      find . -name '*.pyc' -delete 2>/dev/null || true

  # Test task that runs until completion (no timeout)
  test-long:
    help: "Test task that takes a while but completes"
    action: |
      #!/bin/bash
      echo "Starting task..."
      sleep 5
      echo "Task completed successfully!"

  # Test task for demonstrating user interruption
  test-infinite:
    help: "Test task that runs forever (use Ctrl+C to stop)"
    action: |
      #!/bin/bash
      echo "Starting infinite task (press Ctrl+C to stop)..."
      while true; do
        echo "Still running..."
        sleep 2
      done
